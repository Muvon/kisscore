#!/bin/bash
host_file=$(pwd)'/hosts'
if [[ ! -f $host_file ]]; then
  echo 'Create hosts "'$host_file'" file with hostnames to deploy on'
  exit 1
fi
servers=$(cat $host_file)

if [[ -z $servers ]]; then
  echo 'There are no servers for deploy in hosts file'
  exit 1
fi

# Deploy on each server
for server in $servers; do
  (
  echo 'Deploying on server '$server

  # Check for already created folder on server
  ssh -x prod@${server} '[ ! -d /home/prod/'$PROJECT' ]'
  if [[ $? == "0" ]]; then
    ssh -x prod@$server 'mkdir -p /home/prod/'$PROJECT'/env/{etc,log,var,run,bin,tmp,backup}'
    ssh -x prod@$server 'mkdir -p /home/prod/'$PROJECT'/app'
    rsync -aiz env/etc/ prod@$server:/home/prod/$PROJECT/env/etc
  fi
  
  # sync onlye changed files
  rsync -aiz --exclude=env* --exclude=sphinx* \
    --exclude=.git* --exclude=html/f* \
    --exclude=connect-db . prod@$server:/home/prod/$PROJECT

  # Compile PROJECT on server
  ssh -x -t -t prod@${server} 'cd /home/prod/'$PROJECT' && ./init'
  ssh -x -t -t prod@${server} 'rm /home/prod/'$PROJECT'/env/tmp/*'
  # All is done
  echo 'Deployed on server '$server
  ) > $(pwd)/env/tmp/deploy.$server 2>&1 &
done
wait

# Display result of jobs
for file in $(ls $(pwd)/env/tmp/deploy.*); do
  cat $file
  rm $file
done
