#!/bin/bash
user='web'
host_file=$CONFIG_DIR/hosts
if [[ ! -f $host_file ]]; then
  echo 'Create hosts "'$host_file'" file with hostnames to deploy on'
  exit 1
fi
servers=$(cat $host_file)

if [[ -z $servers ]]; then
  echo 'There are no servers for deploy in hosts file'
  exit 1
fi

# Revision @TODO next
# revision=$(`which date` +%Y%m%d.%H%M%S)

# Deploy on each server
for server in $servers; do
  (
  echo 'Deploying on server '$server
  environment=${server#*:}
  if [[ "$environment" == "$server" || -z "$environment" ]]; then
    environment='production'
  fi
  server=${server%:*}
  scp $HOME/.kissrc $user@$server:/home/$user
  ssh -T $user@$server <<"EOF"
    /bin/cat $HOME/.bashrc | /bin/grep -v '#.kissrc$' > $HOME/.bashrc.tmp
    echo "source $HOME/.kissrc #.kissrc" >> $HOME/.bashrc.tmp
    /bin/mv $HOME/.bashrc.tmp $HOME/.bashrc
    source $HOME/.bashrc
EOF

  # Check for already created folder on server
  ssh -T $user@$server '[[ ! -d /home/'$user'/'$PROJECT' ]]'
  if [[ $? == "0" ]]; then
    ssh -T $user@$server 'mkdir -p /home/'$user'/'$PROJECT'/env/{etc,log,var,run,bin,tmp,backup}'
    ssh -T $user@$server 'mkdir -p /home/'$user'/'$PROJECT'/app'
  fi

  # sync onlye changed files
  rsync -aiz --exclude=env/{etc,log,var,run,tmp,backup} --exclude=sphinx* \
    --exclude=.git* --exclude=html/f* . $user@$server:/home/$user/$PROJECT

  # Compile PROJECT on server
  ssh -T $user@$server <<EOF
    kiss $PROJECT
    echo $environment > \$CONFIG_DIR/environment
    export PROJECT_ENV=$environment
    init
    [[ \$(/bin/ls \$TMP_DIR) ]] && /bin/rm \$TMP_DIR/*
    php-exec 'opcache_reset()' > /dev/null
EOF
  # All is done
  echo 'Deployed on server '$server
  ) > $TMP_DIR/deploy.$server 2>&1 &
done
wait

# Display result of jobs
for file in $(ls $TMP_DIR/deploy.*); do
  cat $file
  rm $file
done
