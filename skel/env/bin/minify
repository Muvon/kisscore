#!/bin/bash

# Check command line arguments
if [[ -z $1 ]]; then
  echo 'Usage: '$0' [file] > [result]'
  exit 1
fi

if [[ ! -f $1 ]]; then
  echo 'Source file to be minified not found'
  exit 1
fi

# Reduce number of bytes
code=$(cat $1 |
  sed 's@/\*.*\*/@@g' | 
  sed -r 's/\/\/.*$//g' | 
  sed '/^$/d' | 
  tr '\n' ';' |
  sed -r 's/^\s*//;s/\s*$//' | 
  tr -s ' ' |
  sed -r 's/\}\;\}/\}\}/g' |

  # Remove all white spaces before and after the colon
  sed -r 's/\s*([\+\=\>\<\,\;\?\:\{\}\(\)])\s*/\1/g' |

  # Replace special operators
  sed -r 's/\s*(\[|\]|\&\&|==|===|\!=|\!==)\s*/\1/g' |

  sed -r 's/\{;/\{/g' |
  # Replace semicolons
  sed -r 's/[\;\,]\}/\}/g' |
  sed -r 's/\;+/\;/g' |
  sed -r 's/\;$//g' |
  sed -r 's/\,\;/\,/g'
)

# Special rules for js files
if [[ ${1##*.} == 'js' ]]; then 
  code=$(echo $code)
fi

# Special rules for css files
if [[ ${1##*.} == 'css' ]]; then
  code=$(echo $code |
    sed -r 's/\}\;/\}/g' |
    sed -r 's/and\(/and \(/g' |
    sed -r 's/\#([abcdefa-z]{3})\1/\#\1/g' |
    sed -r 's/\}\;/\}/g'
  )
fi

echo $code
